// @generated by protobuf-ts 2.9.4 with parameter server_none
// @generated from protobuf file "client.proto" (package "mg.mada_immo.client", syntax proto3)
// tslint:disable
import { Location } from "./client";
import type { ListLocationResponse } from "./client";
import type { ListLocationRequest } from "./client";
import { Payement } from "./client";
import type { Empty } from "./client";
import type { FairePayementRequest } from "./client";
import type { LoyersPayeResponse } from "./client";
import type { LoyersPayeRequest } from "./client";
import type { LoyersResponse } from "./client";
import type { LoyersRequest } from "./client";
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Auth } from "./client";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { LoginResponse } from "./client";
import type { LoginRequest } from "./client";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service mg.mada_immo.client.Auth
 */
export interface IAuthClient {
    /**
     * @generated from protobuf rpc: Login(mg.mada_immo.client.LoginRequest) returns (mg.mada_immo.client.LoginResponse);
     */
    login(input: LoginRequest, options?: RpcOptions): UnaryCall<LoginRequest, LoginResponse>;
}
/**
 * @generated from protobuf service mg.mada_immo.client.Auth
 */
export class AuthClient implements IAuthClient, ServiceInfo {
    typeName = Auth.typeName;
    methods = Auth.methods;
    options = Auth.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Login(mg.mada_immo.client.LoginRequest) returns (mg.mada_immo.client.LoginResponse);
     */
    login(input: LoginRequest, options?: RpcOptions): UnaryCall<LoginRequest, LoginResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoginRequest, LoginResponse>("unary", this._transport, method, opt, input);
    }
}
/**
 * @generated from protobuf service mg.mada_immo.client.Payement
 */
export interface IPayementClient {
    /**
     * @generated from protobuf rpc: Loyers(mg.mada_immo.client.LoyersRequest) returns (mg.mada_immo.client.LoyersResponse);
     */
    loyers(input: LoyersRequest, options?: RpcOptions): UnaryCall<LoyersRequest, LoyersResponse>;
    /**
     * @generated from protobuf rpc: LoyersPaye(mg.mada_immo.client.LoyersPayeRequest) returns (mg.mada_immo.client.LoyersPayeResponse);
     */
    loyersPaye(input: LoyersPayeRequest, options?: RpcOptions): UnaryCall<LoyersPayeRequest, LoyersPayeResponse>;
    /**
     * @generated from protobuf rpc: FairePayement(mg.mada_immo.client.FairePayementRequest) returns (mg.mada_immo.client.Empty);
     */
    fairePayement(input: FairePayementRequest, options?: RpcOptions): UnaryCall<FairePayementRequest, Empty>;
}
/**
 * @generated from protobuf service mg.mada_immo.client.Payement
 */
export class PayementClient implements IPayementClient, ServiceInfo {
    typeName = Payement.typeName;
    methods = Payement.methods;
    options = Payement.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Loyers(mg.mada_immo.client.LoyersRequest) returns (mg.mada_immo.client.LoyersResponse);
     */
    loyers(input: LoyersRequest, options?: RpcOptions): UnaryCall<LoyersRequest, LoyersResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoyersRequest, LoyersResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoyersPaye(mg.mada_immo.client.LoyersPayeRequest) returns (mg.mada_immo.client.LoyersPayeResponse);
     */
    loyersPaye(input: LoyersPayeRequest, options?: RpcOptions): UnaryCall<LoyersPayeRequest, LoyersPayeResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoyersPayeRequest, LoyersPayeResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: FairePayement(mg.mada_immo.client.FairePayementRequest) returns (mg.mada_immo.client.Empty);
     */
    fairePayement(input: FairePayementRequest, options?: RpcOptions): UnaryCall<FairePayementRequest, Empty> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<FairePayementRequest, Empty>("unary", this._transport, method, opt, input);
    }
}
/**
 * @generated from protobuf service mg.mada_immo.client.Location
 */
export interface ILocationClient {
    /**
     * @generated from protobuf rpc: List(mg.mada_immo.client.ListLocationRequest) returns (mg.mada_immo.client.ListLocationResponse);
     */
    list(input: ListLocationRequest, options?: RpcOptions): UnaryCall<ListLocationRequest, ListLocationResponse>;
}
/**
 * @generated from protobuf service mg.mada_immo.client.Location
 */
export class LocationClient implements ILocationClient, ServiceInfo {
    typeName = Location.typeName;
    methods = Location.methods;
    options = Location.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: List(mg.mada_immo.client.ListLocationRequest) returns (mg.mada_immo.client.ListLocationResponse);
     */
    list(input: ListLocationRequest, options?: RpcOptions): UnaryCall<ListLocationRequest, ListLocationResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListLocationRequest, ListLocationResponse>("unary", this._transport, method, opt, input);
    }
}
